@keyframes moveInLeft {
  0% {
    opacity: 0;
    transform: translateX(-100px);
  }
  80% {
    transform: translateX(10px);
  }
  /* 
    80% {
        transform: rotateX(0deg)
    } */
  /*! we also have rotation to rotate an animation  */
  100% {
    opacity: 1;
    transform: translateX(0);
  }
}

@keyframes moveInRight {
  0% {
    opacity: 0;
    transform: translateX(100px);
  }
  80% {
    transform: translateX(-10px);
  }
  100% {
    opacity: 1;
    transform: translateX(0);
  }
}

@keyframes moveInRight {
  0% {
    opacity: 0;
    transform: translateX(100px);
  }
  80% {
    transform: translateX(-10px);
  }
  100% {
    opacity: 1;
    transform: translateX(0);
  }
}

@keyframes moveInButton {
  0% {
    opacity: 0;
    transform: translateY(60px);
  }
  100% {
    opacity: 1;
    /* transform: translateX(0) */
  }
}

/*! * is a universal selector */
*,
*::after,
*::before {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
  /*! normally when you add 'padding' or 'border' it takes extra space outside. but you*/
  /*! in border box it doesn't take extra space. it remains inside the space you selsected for the border  */
}

html {
  font-size: 62.5%;
}

body {
  box-sizing: border-box;
}

body {
  font-family: "Lato", sans-serif;
  font-weight: 400;
  font-size: 16px;
  line-height: 1.7;
  /*! difference between two lines */
  color: #777;
  padding: 30px;
}

.heading-primary {
  color: #fff;
  text-transform: uppercase;
  /*? animation  */
  backface-visibility: hidden;
  /*!this resolves animation shaking. no one knows why  */
  margin-bottom: 60px;
}

.heading-primary--main {
  display: block;
  /*? this line creates line break  */
  font-size: 60px;
  font-weight: 700;
  letter-spacing: 35px;
  /*! Animation part  */
  animation-name: moveInLeft;
  animation-duration: 1s;
  animation-timing-function: ease-out;
  /* animation-delay: 3s; */
  /*! animation will start after 3s of loading the page  */
  /* animation-iteration-count: 3; */
  /*! animation will happen 3 times  */
  /* animation-timing-function: ease-in; */
  /*!ease-in== animation is slower and then fast  */
  /*!ease-out== animation is faster and then slow  */
  /*? we can also use animation when hover  */
}

.heading-primary--sub {
  display: block;
  font-size: 20px;
  font-weight: 700;
  letter-spacing: 17.4px;
  /*! animation part  */
  animation-name: moveInRight;
  animation-duration: 1s;
  animation-timing-function: ease-out;
}

.heading-secondary {
  font-size: 3.5rem;
  text-transform: uppercase;
  font-weight: 700;
  display: inline-block;
  background-image: linear-gradient(to right, #7ed56f, #28b485);
  -webkit-background-clip: text;
  color: transparent;
  transition: all .2sec;
  letter-spacing: 2px;
}

.heading-secondary:hover {
  transform: skewY(2deg) skewX(15deg) scale(1.1);
  text-shadow: 0.5rem 1rem 2rem rgba(0, 0, 0, 0.2);
}

.heading-tertiary {
  font-size: 1.6rem;
  font-weight: 700;
  text-transform: uppercase;
}

.paragraph {
  font-size: 1.6rem;
}

.paragraph:not(:last-child) {
  margin-bottom: 3rem;
}

.u-center-text {
  text-align: center;
}

.u-margin-bottom-big {
  margin-bottom: 8rem;
}

.u-margin-bottom-medium {
  margin-bottom: 4rem;
}

.u-margin-bottom-small {
  margin-bottom: 1.5rem;
}

.btn {
  /*! pseudo classes  */
  /*! link state or visited state  */
  /*! pseudo element  */
  /*! animation shaking when hover  */
  /*? the main theme is ...we have our main button and we will have a similar like button behnd that button  */
  /*? and when we hover it disappears  */
}

.btn:link, .btn:visited {
  text-transform: uppercase;
  text-decoration: none;
  padding: 15px 40px;
  /*! normally it's an inline element. means it doesn't have it's own space. to give it it's own space  */
  display: inline-block;
  border-radius: 100px;
  /*! to make the button from square to radius means to cut the edge */
  /*! Animation short  */
  transition: all .2s;
  /*!this part is for the animation   */
  position: relative;
  font-size: 1.6rem;
}

.btn:hover {
  transform: translateY(-10px);
  box-shadow: 0 10px 20px rgba(0, 0, 0, 0.2);
}

.btn.active {
  transform: translateY(-1px);
  box-shadow: 0 5px 10px rgba(0, 0, 0, 0.2);
}

.btn--white {
  background-color: #fff;
  color: #777;
}

.btn::after {
  content: "";
  /*! this line doesn't heve anything to do. but it has to be here  */
  display: inline-block;
  /*! this line takes it's own space for the button like the 1st button  */
  height: 100%;
  width: 100%;
  /*! these lines will make the 2nd button exxactly like the 1st button .  */
  border-radius: 100px;
  position: absolute;
  top: 0;
  left: 0;
  z-index: -1;
  transition: all .4s;
}

.btn--white::after {
  background-color: #fff;
}

.btn:hover::after {
  /* transform: scale(1.5); */
  /*!this makes buttons 1.5 times biggre. it has to be bigger than 1. 1 is the exact or same size. that's why it won't work  */
  /* to make it better the code will be like this */
  transform: scaleX(1.4) scaleY(1.6);
  opacity: 0;
}

.btn--animated {
  /* animation-name: moveInButton;
    animation-duration: .7s;
    animation-timing-function: ease-in;
    animation-delay: .75s; */
  /*! these whole thing can be written in one line  */
  animation: moveInButton .5s ease-out .75s;
  /*! normally button stays visible ...and it appears from the down   */
  /*! but what we want is to move it from the bottom but not visible before it  */
  /*! the solution is this line  */
  animation-fill-mode: backwards;
  /*! this line applies the properties of 0% before the animation starts  */
}

.btn-text:link, .btn-text:visited {
  font-size: 1.6rem;
  color: #55c57a;
  display: inline-block;
  text-decoration: none;
  border-bottom: 1px solid #55c57a;
  padding: 3px;
  transition: translateY(-2px);
}

.btn-text:hover {
  background-color: #55c57a;
  color: #fff;
  box-shadow: 0 1rem 2rem rgba(0, 0, 0, 0.15);
  transform: translateY(-2px);
}

.btn-text:active {
  box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.15);
  transform: translateY(0);
}

.compositon {
  position: relative;
}

.compositon__photo {
  width: 55%;
  box-shadow: 0 1.5rem 4rem rgba(0, 0, 0, 0.4);
  border-radius: 2px;
  position: absolute;
  z-index: 10;
  transition: all .2s;
  outline-offset: 2rem;
}

.compositon__photo--p1 {
  left: 0;
  top: -2rem;
}

.compositon__photo--p2 {
  right: 0;
  top: 2rem;
}

.compositon__photo--p3 {
  left: 20%;
  top: 10rem;
}

.compositon__photo:hover {
  outline: 1.5rem solid #55c57a;
  transform: scale(1.05) translateY(-0.5rem);
  box-shadow: 0, 2.5rem 4rem rgba(0, 0, 0, 0.5);
  z-index: 20;
}

.compositon:hover .compositon__photo:not(:hover) {
  transform: scale(0.9);
}

.feature-box {
  background-color: rgba(255, 255, 255, 0.8);
  font-size: 1.5;
  padding: 2.5rem;
  text-align: center;
  border-radius: 3px;
  box-shadow: 0 1.5rem 4rem rgba(0, 0, 0, 0.15);
  transition: transform .3s;
}

.feature-box__icon {
  font-size: 6rem;
  margin-bottom: .5rem;
  display: inline-block;
  background-image: linear-gradient(to right, #7ed56f, #28b485);
  -webkit-background-clip: text;
  color: transparent;
}

.feature-box:hover {
  transform: translateY(-1.5rem) scale(1.03);
}

.card {
  perspective: 150rem;
  -moz-perspective: 150rem;
  position: relative;
  height: 52rem;
}

.card__side {
  height: 50rem;
  font-size: 2rem;
  transition: all .8s ease;
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  backface-visibility: hidden;
  border-radius: 3px;
  overflow: hidden;
  box-shadow: 0 1.5rem 4rem rgba(0, 0, 0, 0.15);
}

.card__side--front {
  background-color: #fff;
}

.card__side--back {
  transform: rotateY(180deg);
}

.card__side--back-1 {
  background-image: linear-gradient(to right bottom, #ffb900, #ff7730);
}

.card:hover .card__side--front {
  transform: rotateY(-180deg);
}

.card:hover .card__side--back {
  transform: rotateY(0);
}

.card__picture {
  background-size: cover;
  height: 23rem;
  background-blend-mode: screen;
  clip-path: polygon(0 0, 100% 0, 100% 85%, 0 100%);
}

.card__picture--1 {
  background-image: linear-gradient(to right bottom, #ffb900, #ff7730), url(../img/nat-5.jpg);
}

.card__picture--2 {
  background-image: linear-gradient(to right bottom, #7ed56f, #28b485), url(../img/nat-6.jpg);
}

.card__picture--3 {
  background-image: linear-gradient(to right bottom, #ffb900, #ff7730), url(../img/nat-7.jpg);
}

.card__heading {
  font-size: 2.8rem;
  font-weight: 300;
  text-transform: uppercase;
  text-align: right;
  color: #fff;
  position: absolute;
  top: 12rem;
  right: 2rem;
  width: 75%;
}

.card__heading-span {
  padding: 1rem 1.5rem;
  box-decoration-break: clone;
}

.card__heading-span--1 {
  background-image: linear-gradient(to right bottom, rgba(255, 185, 0, 0.85), rgba(255, 119, 48, 0.85));
}

.card__details {
  padding: 3rem;
}

.card__details ul {
  list-style: none;
  width: 80%;
  margin: 0 auto;
}

.card__details ul li {
  text-align: center;
  font-size: 1.5rem;
  padding: 1rem;
}

.card__details ul li:not(:last-child) {
  border-bottom: 1px solid #eee;
}

.card__cta {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  width: 90%;
  text-align: center;
}

.card__price-box {
  text-align: center;
  color: #fff;
  margin-bottom: 8rem;
}

.card__price-only {
  font-size: 1.4rem;
  text-transform: uppercase;
}

.card__price-value {
  font-size: 6rem;
  font-weight: 100;
}

.header {
  height: 95vh;
  /*! it takes the 95 percent of the total box size. you will see a 5% blank area */
  background-image: linear-gradient(to right bottom, rgba(126, 213, 111, 0.8), rgba(40, 180, 133, 0.8)), url(../img/hero.jpg);
  /* rgba= red green blue and opacity: ; */
  /*! 'liniar gradient right' here mixture of two colors starting from left to right: ;  */
  /*! 'liniar gradient right bottom' here mixture of two colors starting from left to right but at the bottom cornder ;  */
  /*! 'liniar gradient right bottom ' here mixture of two colors adn the image starting from left to right but at the bottom cornder ;  */
  background-size: cover;
  /*! whatever the width of the viewport. 'cover' will try to fit in that width */
  background-position: top;
  /*! wahtever the viewport size image always stays at  the top of the container  */
  clip-path: polygon(0 0, 100% 0, 100% 75%, 0 100%);
  /*! this line cuts the image. you have to set the four co ordinates  */
  /*! a tool called 'clippy' can be used for this. search in google  */
  /* clip-path: polygon(0 0,100% 50% , 100% 50%, 0 100%); */
  /*!this line makes triangle  */
  position: relative;
  /*? header image is relative but other contents are absolute. means they move but header stasys fixed relative to them  */
  /*?this position is relative acording to the logo and logo-box  */
}

.header__logo-box {
  position: absolute;
  top: 40px;
  left: 40px;
}

.header__logo {
  height: 30px;
}

.header__text-box {
  position: absolute;
  top: 40%;
  left: 50%;
  /*! first we fixed a position  */
  transform: translate(-50%, -50%);
  /*! then we cut the position from the current position. because the whole position wasn't right  */
  text-align: center;
  /*! to keep all the texts at the center of the box  */
}

.row {
  max-width: 114rem;
  margin: 0 auto;
}

.row:not(:last-child) {
  margin-bottom: 8rem;
}

.row::after {
  content: "";
  display: table;
  clear: both;
}

.row [class^="col-"] {
  float: left;
}

.row [class^="col-"]:not(:last-child) {
  margin-right: 6rem;
}

.row .col-1-of-2 {
  width: calc((100% - 6rem)/2);
}

.row .col-1-of-3 {
  width: calc((100% - 2 * 6rem)/3);
}

.row .col-2-of-3 {
  width: calc( 2* ((100% - 2 * 6rem)/3) + 6rem);
}

.row .col-1-of-4 {
  width: calc((100% - 3 * 6rem)/4);
}

.row .col-2-of-4 {
  width: calc(2 * ((100% - 3 * 6rem) / 4) + 6rem);
}

.row .col-3-of-4 {
  width: calc(3 * ((100% - 3 * 6rem)/4) + 2 * 6rem);
}

.section-about {
  background-color: #f7f7f7;
  padding: 30rem 0;
  margin-top: -25vh;
}

.section-features {
  padding: 20rem 0;
  background-image: linear-gradient(to right bottom, rgba(126, 213, 111, 0.8), rgba(40, 180, 133, 0.8)), url(../img/nat-4.jpg);
  background-size: cover;
  margin-top: -10rem;
  transform: skewY(-7deg);
}

.section-features > * {
  transform: skewY(7deg);
}

.section-tours {
  background-color: #f7f7f7;
  padding: 25rem 0 50rem 0;
  margin-top: -10rem;
}
